// <auto-generated />
using System;
using DevExtremeAspNetCoreResponsiveApp.Model;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace DevExtremeAspNetCoreResponsiveApp.Migrations
{
    [DbContext(typeof(PayLotsDBContext))]
    partial class PayLotsDBContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "2.1.14-servicing-32113")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("DevExtremeAspNetCoreResponsiveApp.Model.AppUser", b =>
                {
                    b.Property<string>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<int>("AccessFailedCount");

                    b.Property<string>("ConcurrencyStamp")
                        .IsConcurrencyToken();

                    b.Property<string>("Email")
                        .HasMaxLength(256);

                    b.Property<bool>("EmailConfirmed");

                    b.Property<bool>("LockoutEnabled");

                    b.Property<DateTimeOffset?>("LockoutEnd");

                    b.Property<string>("NormalizedEmail")
                        .HasMaxLength(256);

                    b.Property<string>("NormalizedUserName")
                        .HasMaxLength(256);

                    b.Property<string>("PasswordHash");

                    b.Property<string>("PhoneNumber");

                    b.Property<bool>("PhoneNumberConfirmed");

                    b.Property<string>("SecurityStamp");

                    b.Property<bool>("TwoFactorEnabled");

                    b.Property<string>("UserName")
                        .HasMaxLength(256);

                    b.HasKey("Id");

                    b.HasIndex("NormalizedEmail")
                        .HasName("EmailIndex");

                    b.HasIndex("NormalizedUserName")
                        .IsUnique()
                        .HasName("UserNameIndex")
                        .HasFilter("[NormalizedUserName] IS NOT NULL");

                    b.ToTable("AspNetUsers");
                });

            modelBuilder.Entity("DevExtremeAspNetCoreResponsiveApp.Model.Asignaciones", b =>
                {
                    b.Property<int>("IdAsignacion")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<bool?>("AplicaInteres");

                    b.Property<bool?>("AplicaMora");

                    b.Property<decimal?>("CuotaMinima")
                        .HasColumnType("numeric(18, 2)");

                    b.Property<int?>("DiaCuota");

                    b.Property<bool?>("Donado");

                    b.Property<string>("Estado");

                    b.Property<DateTime>("Far")
                        .HasColumnName("FAR")
                        .HasColumnType("smalldatetime");

                    b.Property<DateTime?>("FechaInicioPago")
                        .HasColumnType("smalldatetime");

                    b.Property<DateTime>("Fua")
                        .HasColumnName("FUA")
                        .HasColumnType("smalldatetime");

                    b.Property<int>("IdBeneficiario");

                    b.Property<int>("IdLote");

                    b.Property<decimal?>("MontoTotal")
                        .HasColumnType("numeric(18, 2)");

                    b.Property<string>("Observaciones");

                    b.Property<int?>("Plazo");

                    b.Property<decimal?>("Prima")
                        .HasColumnType("numeric(18, 2)");

                    b.Property<decimal?>("TasaInteres")
                        .HasColumnType("numeric(18, 2)");

                    b.Property<string>("Uar")
                        .IsRequired()
                        .HasColumnName("UAR");

                    b.Property<string>("Uua")
                        .IsRequired()
                        .HasColumnName("UUA");

                    b.HasKey("IdAsignacion");

                    b.HasIndex("IdBeneficiario");

                    b.HasIndex("IdLote");

                    b.ToTable("Asignaciones");
                });

            modelBuilder.Entity("DevExtremeAspNetCoreResponsiveApp.Model.Beneficiarios", b =>
                {
                    b.Property<int>("IdBeneficiario")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("CedulaIdentidad");

                    b.Property<string>("Direccion");

                    b.Property<DateTime>("Far")
                        .HasColumnName("FAR")
                        .HasColumnType("smalldatetime");

                    b.Property<DateTime>("Fua")
                        .HasColumnName("FUA")
                        .HasColumnType("smalldatetime");

                    b.Property<string>("NombreCompleto")
                        .IsRequired();

                    b.Property<string>("Telefono");

                    b.Property<string>("Uar")
                        .IsRequired()
                        .HasColumnName("UAR");

                    b.Property<string>("Uua")
                        .IsRequired()
                        .HasColumnName("UUA");

                    b.HasKey("IdBeneficiario");

                    b.ToTable("Beneficiarios");
                });

            modelBuilder.Entity("DevExtremeAspNetCoreResponsiveApp.Model.Bloques", b =>
                {
                    b.Property<int>("IdBloque")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Bloque")
                        .IsRequired()
                        .HasMaxLength(50);

                    b.Property<DateTime>("Far")
                        .HasColumnName("FAR")
                        .HasColumnType("smalldatetime");

                    b.Property<DateTime>("Fua")
                        .HasColumnName("FUA")
                        .HasColumnType("smalldatetime");

                    b.Property<int>("IdUbicacion");

                    b.Property<string>("Observaciones");

                    b.Property<string>("Uar")
                        .IsRequired()
                        .HasColumnName("UAR");

                    b.Property<string>("Uua")
                        .IsRequired()
                        .HasColumnName("UUA");

                    b.HasKey("IdBloque");

                    b.HasIndex("IdUbicacion");

                    b.ToTable("Bloques");
                });

            modelBuilder.Entity("DevExtremeAspNetCoreResponsiveApp.Model.CatalogoDepartamentos", b =>
                {
                    b.Property<int>("DepartamentoId")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("Departamento_Id")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Descripcion")
                        .IsRequired()
                        .HasMaxLength(150);

                    b.Property<DateTime>("Far")
                        .HasColumnName("FAR")
                        .HasColumnType("smalldatetime");

                    b.Property<DateTime>("Fua")
                        .HasColumnName("FUA")
                        .HasColumnType("smalldatetime");

                    b.Property<string>("Uar")
                        .IsRequired()
                        .HasColumnName("UAR")
                        .HasMaxLength(50);

                    b.Property<string>("Uua")
                        .IsRequired()
                        .HasColumnName("UUA")
                        .HasMaxLength(50);

                    b.HasKey("DepartamentoId");

                    b.ToTable("Catalogo_Departamentos");
                });

            modelBuilder.Entity("DevExtremeAspNetCoreResponsiveApp.Model.CatalogoMunicipios", b =>
                {
                    b.Property<int>("MunicipioId")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("Municipio_Id")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("DepartamentoId")
                        .HasColumnName("Departamento_Id");

                    b.Property<string>("Descripcion")
                        .IsRequired()
                        .HasMaxLength(150);

                    b.Property<DateTime>("Far")
                        .HasColumnName("FAR")
                        .HasColumnType("smalldatetime");

                    b.Property<DateTime>("Fua")
                        .HasColumnName("FUA")
                        .HasColumnType("smalldatetime");

                    b.Property<string>("Uar")
                        .IsRequired()
                        .HasColumnName("UAR")
                        .HasMaxLength(50);

                    b.Property<string>("Uua")
                        .IsRequired()
                        .HasColumnName("UUA")
                        .HasMaxLength(50);

                    b.HasKey("MunicipioId");

                    b.HasIndex("DepartamentoId");

                    b.ToTable("Catalogo_Municipios");
                });

            modelBuilder.Entity("DevExtremeAspNetCoreResponsiveApp.Model.CatalogoPreguntas", b =>
                {
                    b.Property<int>("IdCatalogoPregunta")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("Far")
                        .HasColumnName("FAR")
                        .HasColumnType("smalldatetime");

                    b.Property<string>("Pregunta")
                        .IsRequired();

                    b.Property<string>("Uar")
                        .HasColumnName("UAR")
                        .HasMaxLength(50);

                    b.HasKey("IdCatalogoPregunta");

                    b.ToTable("Catalogo_Preguntas");
                });

            modelBuilder.Entity("DevExtremeAspNetCoreResponsiveApp.Model.ControlAccesoUsuarios", b =>
                {
                    b.Property<int>("IdLogueo")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime?>("Far")
                        .HasColumnName("FAR")
                        .HasColumnType("smalldatetime");

                    b.Property<string>("Pc")
                        .HasColumnName("PC");

                    b.Property<string>("Perfil");

                    b.Property<string>("SesionId")
                        .HasColumnName("Sesion_Id");

                    b.Property<string>("Usuario");

                    b.HasKey("IdLogueo");

                    b.ToTable("Control_Acceso_Usuarios");
                });

            modelBuilder.Entity("DevExtremeAspNetCoreResponsiveApp.Model.DatosEmpresa", b =>
                {
                    b.Property<int>("DatosEmpresaId")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Direccion");

                    b.Property<string>("Email")
                        .HasMaxLength(50);

                    b.Property<DateTime?>("Far")
                        .HasColumnName("FAR")
                        .HasColumnType("smalldatetime");

                    b.Property<DateTime?>("Fua")
                        .HasColumnName("FUA")
                        .HasColumnType("smalldatetime");

                    b.Property<byte[]>("Logo")
                        .HasColumnType("image");

                    b.Property<string>("NombreEmpresa");

                    b.Property<int?>("ReciboInicial");

                    b.Property<string>("Ruc")
                        .HasMaxLength(100);

                    b.Property<string>("Telefono")
                        .HasMaxLength(50);

                    b.Property<string>("Uar")
                        .HasColumnName("UAR")
                        .HasMaxLength(50);

                    b.Property<string>("Uua")
                        .HasColumnName("UUA")
                        .HasMaxLength(50);

                    b.HasKey("DatosEmpresaId");

                    b.ToTable("DatosEmpresa");
                });

            modelBuilder.Entity("DevExtremeAspNetCoreResponsiveApp.Model.ErroresSistema", b =>
                {
                    b.Property<int>("IdErrorSistema")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("CodError")
                        .IsRequired();

                    b.Property<string>("Error")
                        .IsRequired();

                    b.Property<DateTime>("Fecha")
                        .HasColumnType("smalldatetime");

                    b.Property<string>("Pantalla")
                        .IsRequired();

                    b.Property<string>("Usuario")
                        .IsRequired();

                    b.HasKey("IdErrorSistema");

                    b.ToTable("ErroresSistema");
                });

            modelBuilder.Entity("DevExtremeAspNetCoreResponsiveApp.Model.ErrorSql", b =>
                {
                    b.Property<int>("IdErrorSql")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("IdErrorSQL")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("ErrorSql1")
                        .IsRequired()
                        .HasColumnName("ErrorSQL");

                    b.Property<DateTime>("Fecha")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("smalldatetime")
                        .HasDefaultValueSql("(getdate())");

                    b.Property<string>("IdentityUser")
                        .IsRequired();

                    b.HasKey("IdErrorSql");

                    b.ToTable("ErrorSQL");
                });

            modelBuilder.Entity("DevExtremeAspNetCoreResponsiveApp.Model.Importacion3", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("ID")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<decimal?>("Area")
                        .HasColumnName("AREA")
                        .HasColumnType("numeric(18, 2)");

                    b.Property<string>("Beneficiario")
                        .HasColumnName("BENEFICIARIO");

                    b.Property<string>("Bloque")
                        .HasColumnName("BLOQUE");

                    b.Property<string>("Cedula")
                        .HasColumnName("CEDULA");

                    b.Property<decimal?>("Costototal")
                        .HasColumnName("COSTOTOTAL")
                        .HasColumnType("numeric(18, 2)");

                    b.Property<decimal?>("Culminacion")
                        .HasColumnName("CULMINACION")
                        .HasColumnType("numeric(18, 2)");

                    b.Property<decimal?>("Cuota")
                        .HasColumnName("CUOTA")
                        .HasColumnType("numeric(18, 2)");

                    b.Property<string>("Direccion")
                        .HasColumnName("DIRECCION");

                    b.Property<string>("Donado")
                        .HasColumnName("DONADO");

                    b.Property<string>("Errores")
                        .HasColumnName("ERRORES");

                    b.Property<DateTime?>("FechaAbr2019")
                        .HasColumnName("FechaABR2019")
                        .HasColumnType("datetime");

                    b.Property<DateTime?>("FechaAgo2019")
                        .HasColumnName("FechaAGO2019")
                        .HasColumnType("datetime");

                    b.Property<DateTime?>("FechaDic2018")
                        .HasColumnName("FechaDIC2018")
                        .HasColumnType("datetime");

                    b.Property<DateTime?>("FechaDic2019")
                        .HasColumnName("FechaDIC2019")
                        .HasColumnType("datetime");

                    b.Property<DateTime?>("FechaEne2019")
                        .HasColumnName("FechaENE2019")
                        .HasColumnType("datetime");

                    b.Property<DateTime?>("FechaFeb2019")
                        .HasColumnName("FechaFEB2019")
                        .HasColumnType("datetime");

                    b.Property<DateTime?>("FechaJul2019")
                        .HasColumnName("FechaJUL2019")
                        .HasColumnType("datetime");

                    b.Property<DateTime?>("FechaJun2019")
                        .HasColumnName("FechaJUN2019")
                        .HasColumnType("datetime");

                    b.Property<DateTime?>("FechaMar2019")
                        .HasColumnName("FechaMAR2019")
                        .HasColumnType("datetime");

                    b.Property<DateTime?>("FechaMay2019")
                        .HasColumnName("FechaMAY2019")
                        .HasColumnType("datetime");

                    b.Property<DateTime?>("FechaNov2018")
                        .HasColumnName("FechaNOV2018")
                        .HasColumnType("datetime");

                    b.Property<DateTime?>("FechaNov2019")
                        .HasColumnName("FechaNOV2019")
                        .HasColumnType("datetime");

                    b.Property<DateTime?>("FechaOct2018")
                        .HasColumnName("FechaOCT2018")
                        .HasColumnType("datetime");

                    b.Property<DateTime?>("FechaOct2019")
                        .HasColumnName("FechaOCT2019")
                        .HasColumnType("datetime");

                    b.Property<DateTime?>("FechaSep2018")
                        .HasColumnName("FechaSEP2018")
                        .HasColumnType("datetime");

                    b.Property<DateTime?>("FechaSep2019")
                        .HasColumnName("FechaSEP2019")
                        .HasColumnType("datetime");

                    b.Property<DateTime?>("Fechainiciopago")
                        .HasColumnName("FECHAINICIOPAGO")
                        .HasColumnType("datetime");

                    b.Property<string>("Grupo")
                        .HasColumnName("GRUPO");

                    b.Property<string>("Lote")
                        .HasColumnName("LOTE");

                    b.Property<decimal?>("MontoAbr2019")
                        .HasColumnName("MontoABR2019")
                        .HasColumnType("numeric(18, 2)");

                    b.Property<decimal?>("MontoAgo2019")
                        .HasColumnName("MontoAGO2019")
                        .HasColumnType("numeric(18, 2)");

                    b.Property<decimal?>("MontoDic2018")
                        .HasColumnName("MontoDIC2018")
                        .HasColumnType("numeric(18, 2)");

                    b.Property<decimal?>("MontoDic2019")
                        .HasColumnName("MontoDIC2019")
                        .HasColumnType("numeric(18, 2)");

                    b.Property<decimal?>("MontoEne2019")
                        .HasColumnName("MontoENE2019")
                        .HasColumnType("numeric(18, 2)");

                    b.Property<decimal?>("MontoFeb2019")
                        .HasColumnName("MontoFEB2019")
                        .HasColumnType("numeric(18, 2)");

                    b.Property<decimal?>("MontoJul2019")
                        .HasColumnName("MontoJUL2019")
                        .HasColumnType("numeric(18, 2)");

                    b.Property<decimal?>("MontoJun2019")
                        .HasColumnName("MontoJUN2019")
                        .HasColumnType("numeric(18, 2)");

                    b.Property<decimal?>("MontoMar2019")
                        .HasColumnName("MontoMAR2019")
                        .HasColumnType("numeric(18, 2)");

                    b.Property<decimal?>("MontoMay2019")
                        .HasColumnName("MontoMAY2019")
                        .HasColumnType("numeric(18, 2)");

                    b.Property<decimal?>("MontoNov2018")
                        .HasColumnName("MontoNOV2018")
                        .HasColumnType("numeric(18, 2)");

                    b.Property<decimal?>("MontoNov2019")
                        .HasColumnName("MontoNOV2019")
                        .HasColumnType("numeric(18, 2)");

                    b.Property<decimal?>("MontoOct2018")
                        .HasColumnName("MontoOCT2018")
                        .HasColumnType("numeric(18, 2)");

                    b.Property<string>("MontoOct2019")
                        .HasColumnName("MontoOCT2019");

                    b.Property<decimal?>("MontoSep2018")
                        .HasColumnName("MontoSEP2018")
                        .HasColumnType("numeric(18, 2)");

                    b.Property<decimal?>("MontoSep2019")
                        .HasColumnName("MontoSEP2019")
                        .HasColumnType("numeric(18, 2)");

                    b.Property<string>("PlazoDeterminado")
                        .HasColumnName("PLAZO DETERMINADO ");

                    b.Property<string>("Recaudado")
                        .HasColumnName("RECAUDADO");

                    b.Property<string>("ReciboAbr2019")
                        .HasColumnName("ReciboABR2019");

                    b.Property<string>("ReciboAgo2019")
                        .HasColumnName("ReciboAGO2019");

                    b.Property<string>("ReciboDic2018")
                        .HasColumnName("ReciboDIC2018");

                    b.Property<string>("ReciboDic2019")
                        .HasColumnName("ReciboDIC2019");

                    b.Property<string>("ReciboEne2019")
                        .HasColumnName("ReciboENE2019");

                    b.Property<string>("ReciboFeb2019")
                        .HasColumnName("ReciboFEB2019");

                    b.Property<string>("ReciboJul2019")
                        .HasColumnName("ReciboJUL2019");

                    b.Property<string>("ReciboJun2019")
                        .HasColumnName("ReciboJUN2019");

                    b.Property<string>("ReciboMar2019")
                        .HasColumnName("ReciboMAR2019");

                    b.Property<string>("ReciboMay2019")
                        .HasColumnName("ReciboMAY2019");

                    b.Property<string>("ReciboNov2018")
                        .HasColumnName("ReciboNOV2018");

                    b.Property<string>("ReciboNov2019")
                        .HasColumnName("ReciboNOV2019");

                    b.Property<string>("ReciboOct2018")
                        .HasColumnName("ReciboOCT2018");

                    b.Property<string>("ReciboOct2019")
                        .HasColumnName("ReciboOCT2019");

                    b.Property<string>("ReciboSep2018")
                        .HasColumnName("ReciboSEP2018");

                    b.Property<string>("ReciboSep2019")
                        .HasColumnName("ReciboSEP2019");

                    b.Property<string>("Telefono")
                        .HasColumnName("TELEFONO");

                    b.Property<decimal?>("Total1")
                        .HasColumnName("TOTAL1")
                        .HasColumnType("numeric(18, 2)");

                    b.HasKey("Id");

                    b.ToTable("Importacion3");
                });

            modelBuilder.Entity("DevExtremeAspNetCoreResponsiveApp.Model.Lotes", b =>
                {
                    b.Property<int>("IdLote")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<decimal?>("Area")
                        .HasColumnType("numeric(18, 2)");

                    b.Property<string>("Estado");

                    b.Property<DateTime?>("Far")
                        .HasColumnName("FAR")
                        .HasColumnType("smalldatetime");

                    b.Property<DateTime?>("Fua")
                        .HasColumnName("FUA")
                        .HasColumnType("smalldatetime");

                    b.Property<int?>("IdBloque");

                    b.Property<string>("NumeroLote")
                        .IsRequired()
                        .HasMaxLength(50);

                    b.Property<string>("Uar")
                        .HasColumnName("UAR");

                    b.Property<string>("Uua")
                        .HasColumnName("UUA");

                    b.HasKey("IdLote");

                    b.HasIndex("IdBloque");

                    b.ToTable("Lotes");
                });

            modelBuilder.Entity("DevExtremeAspNetCoreResponsiveApp.Model.Mora", b =>
                {
                    b.Property<int>("IdMora")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime?>("Far")
                        .HasColumnName("FAR")
                        .HasColumnType("smalldatetime");

                    b.Property<DateTime?>("Fua")
                        .HasColumnName("FUA")
                        .HasColumnType("smalldatetime");

                    b.Property<int?>("Maximo");

                    b.Property<int?>("Minimo");

                    b.Property<decimal?>("Porcentaje")
                        .HasColumnType("numeric(18, 2)");

                    b.Property<string>("Uar")
                        .HasColumnName("UAR")
                        .HasMaxLength(50);

                    b.Property<string>("Uua")
                        .HasColumnName("UUA")
                        .HasMaxLength(50);

                    b.HasKey("IdMora");

                    b.ToTable("Mora");
                });

            modelBuilder.Entity("DevExtremeAspNetCoreResponsiveApp.Model.Pagos", b =>
                {
                    b.Property<int>("IdPago")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("Far")
                        .HasColumnName("FAR")
                        .HasColumnType("smalldatetime");

                    b.Property<DateTime?>("FechaRecibo")
                        .HasColumnType("smalldatetime");

                    b.Property<DateTime>("Fua")
                        .HasColumnName("FUA")
                        .HasColumnType("smalldatetime");

                    b.Property<int>("IdAsignacion");

                    b.Property<decimal?>("Interés")
                        .HasColumnType("numeric(18, 2)");

                    b.Property<string>("MesPagado")
                        .IsRequired();

                    b.Property<string>("Moneda")
                        .HasMaxLength(50);

                    b.Property<decimal?>("MontoEfectivo")
                        .HasColumnType("numeric(18, 2)");

                    b.Property<decimal>("MontoPago")
                        .HasColumnType("numeric(18, 2)");

                    b.Property<decimal?>("Mora")
                        .HasColumnType("numeric(18, 2)");

                    b.Property<int?>("NumeroAbono");

                    b.Property<string>("NumeroRecibo");

                    b.Property<string>("Observaciones");

                    b.Property<decimal?>("TasaCambio")
                        .HasColumnType("numeric(18, 2)");

                    b.Property<string>("Uar")
                        .IsRequired()
                        .HasColumnName("UAR");

                    b.Property<string>("Uua")
                        .IsRequired()
                        .HasColumnName("UUA");

                    b.HasKey("IdPago");

                    b.HasIndex("IdAsignacion");

                    b.ToTable("Pagos");
                });

            modelBuilder.Entity("DevExtremeAspNetCoreResponsiveApp.Model.Proformas", b =>
                {
                    b.Property<int>("IdProforma")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<decimal?>("Area")
                        .HasColumnType("numeric(18, 2)");

                    b.Property<decimal?>("Cuota")
                        .HasColumnType("numeric(18, 2)");

                    b.Property<string>("Domicilio");

                    b.Property<string>("Email");

                    b.Property<DateTime>("Far")
                        .HasColumnName("FAR")
                        .HasColumnType("smalldatetime");

                    b.Property<decimal?>("Financiar")
                        .HasColumnType("numeric(18, 2)");

                    b.Property<DateTime>("Fua")
                        .HasColumnName("FUA")
                        .HasColumnType("smalldatetime");

                    b.Property<int?>("Interes");

                    b.Property<decimal?>("InteresAcumulado")
                        .HasColumnType("numeric(18, 2)");

                    b.Property<string>("Lote")
                        .HasMaxLength(50);

                    b.Property<string>("Nombre");

                    b.Property<int?>("Plazo");

                    b.Property<decimal?>("PrecioVara")
                        .HasColumnType("numeric(18, 2)");

                    b.Property<decimal?>("Prima")
                        .HasColumnType("numeric(18, 2)");

                    b.Property<string>("Proyecto");

                    b.Property<string>("Telefono");

                    b.Property<decimal?>("Total")
                        .HasColumnType("numeric(18, 2)");

                    b.Property<decimal?>("TotalApagar")
                        .HasColumnName("TotalAPagar")
                        .HasColumnType("numeric(18, 2)");

                    b.Property<string>("Uar")
                        .IsRequired()
                        .HasColumnName("UAR");

                    b.Property<string>("Uua")
                        .IsRequired()
                        .HasColumnName("UUA");

                    b.HasKey("IdProforma");

                    b.ToTable("Proformas");
                });

            modelBuilder.Entity("DevExtremeAspNetCoreResponsiveApp.Model.Seguimientos", b =>
                {
                    b.Property<int>("IdSeguimiento")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("Far")
                        .HasColumnName("FAR")
                        .HasColumnType("smalldatetime");

                    b.Property<int>("IndexSql")
                        .HasColumnName("IndexSQL");

                    b.Property<string>("Observaciones")
                        .IsRequired();

                    b.Property<string>("Tipo")
                        .IsRequired();

                    b.Property<string>("Uar")
                        .HasColumnName("UAR")
                        .HasMaxLength(50);

                    b.HasKey("IdSeguimiento");

                    b.ToTable("Seguimientos");
                });

            modelBuilder.Entity("DevExtremeAspNetCoreResponsiveApp.Model.Ubicaciones", b =>
                {
                    b.Property<int>("IdUbicacion")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<bool?>("AplicaInteres");

                    b.Property<string>("Direccion")
                        .IsRequired();

                    b.Property<DateTime>("Far")
                        .HasColumnName("FAR")
                        .HasColumnType("smalldatetime");

                    b.Property<DateTime>("Fua")
                        .HasColumnName("FUA")
                        .HasColumnType("smalldatetime");

                    b.Property<int?>("IdMunicipio")
                        .HasColumnName("Id_Municipio");

                    b.Property<string>("NombreProyecto");

                    b.Property<string>("Uar")
                        .IsRequired()
                        .HasColumnName("UAR");

                    b.Property<string>("Uua")
                        .IsRequired()
                        .HasColumnName("UUA");

                    b.HasKey("IdUbicacion");

                    b.ToTable("Ubicaciones");
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityRole", b =>
                {
                    b.Property<string>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("ConcurrencyStamp")
                        .IsConcurrencyToken();

                    b.Property<string>("Name")
                        .HasMaxLength(256);

                    b.Property<string>("NormalizedName")
                        .HasMaxLength(256);

                    b.HasKey("Id");

                    b.HasIndex("NormalizedName")
                        .IsUnique()
                        .HasName("RoleNameIndex")
                        .HasFilter("[NormalizedName] IS NOT NULL");

                    b.ToTable("AspNetRoles");
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityRoleClaim<string>", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("ClaimType");

                    b.Property<string>("ClaimValue");

                    b.Property<string>("RoleId")
                        .IsRequired();

                    b.HasKey("Id");

                    b.HasIndex("RoleId");

                    b.ToTable("AspNetRoleClaims");
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserClaim<string>", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("ClaimType");

                    b.Property<string>("ClaimValue");

                    b.Property<string>("UserId")
                        .IsRequired();

                    b.HasKey("Id");

                    b.HasIndex("UserId");

                    b.ToTable("AspNetUserClaims");
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserLogin<string>", b =>
                {
                    b.Property<string>("LoginProvider");

                    b.Property<string>("ProviderKey");

                    b.Property<string>("ProviderDisplayName");

                    b.Property<string>("UserId")
                        .IsRequired();

                    b.HasKey("LoginProvider", "ProviderKey");

                    b.HasIndex("UserId");

                    b.ToTable("AspNetUserLogins");
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserRole<string>", b =>
                {
                    b.Property<string>("UserId");

                    b.Property<string>("RoleId");

                    b.HasKey("UserId", "RoleId");

                    b.HasIndex("RoleId");

                    b.ToTable("AspNetUserRoles");
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserToken<string>", b =>
                {
                    b.Property<string>("UserId");

                    b.Property<string>("LoginProvider");

                    b.Property<string>("Name");

                    b.Property<string>("Value");

                    b.HasKey("UserId", "LoginProvider", "Name");

                    b.ToTable("AspNetUserTokens");
                });

            modelBuilder.Entity("DevExtremeAspNetCoreResponsiveApp.Model.Asignaciones", b =>
                {
                    b.HasOne("DevExtremeAspNetCoreResponsiveApp.Model.Beneficiarios", "IdBeneficiarioNavigation")
                        .WithMany("Asignaciones")
                        .HasForeignKey("IdBeneficiario")
                        .HasConstraintName("FK_Asignaciones_Beneficiarios");

                    b.HasOne("DevExtremeAspNetCoreResponsiveApp.Model.Lotes", "IdLoteNavigation")
                        .WithMany("Asignaciones")
                        .HasForeignKey("IdLote")
                        .HasConstraintName("FK_Asignaciones_Lotes");
                });

            modelBuilder.Entity("DevExtremeAspNetCoreResponsiveApp.Model.Bloques", b =>
                {
                    b.HasOne("DevExtremeAspNetCoreResponsiveApp.Model.Ubicaciones", "IdUbicacionNavigation")
                        .WithMany("Bloques")
                        .HasForeignKey("IdUbicacion")
                        .HasConstraintName("FK_Bloques_Ubicaciones");
                });

            modelBuilder.Entity("DevExtremeAspNetCoreResponsiveApp.Model.CatalogoMunicipios", b =>
                {
                    b.HasOne("DevExtremeAspNetCoreResponsiveApp.Model.CatalogoDepartamentos", "Departamento")
                        .WithMany("CatalogoMunicipios")
                        .HasForeignKey("DepartamentoId")
                        .HasConstraintName("FK_Catalogo_Municipios_Catalogo_Departamentos");
                });

            modelBuilder.Entity("DevExtremeAspNetCoreResponsiveApp.Model.Lotes", b =>
                {
                    b.HasOne("DevExtremeAspNetCoreResponsiveApp.Model.Bloques", "IdBloqueNavigation")
                        .WithMany("Lotes")
                        .HasForeignKey("IdBloque")
                        .HasConstraintName("FK_Lotes_Bloques");
                });

            modelBuilder.Entity("DevExtremeAspNetCoreResponsiveApp.Model.Pagos", b =>
                {
                    b.HasOne("DevExtremeAspNetCoreResponsiveApp.Model.Asignaciones", "IdAsignacionNavigation")
                        .WithMany("Pagos")
                        .HasForeignKey("IdAsignacion")
                        .HasConstraintName("FK_Pagos_Asignaciones");
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityRoleClaim<string>", b =>
                {
                    b.HasOne("Microsoft.AspNetCore.Identity.IdentityRole")
                        .WithMany()
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserClaim<string>", b =>
                {
                    b.HasOne("DevExtremeAspNetCoreResponsiveApp.Model.AppUser")
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserLogin<string>", b =>
                {
                    b.HasOne("DevExtremeAspNetCoreResponsiveApp.Model.AppUser")
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserRole<string>", b =>
                {
                    b.HasOne("Microsoft.AspNetCore.Identity.IdentityRole")
                        .WithMany()
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("DevExtremeAspNetCoreResponsiveApp.Model.AppUser")
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserToken<string>", b =>
                {
                    b.HasOne("DevExtremeAspNetCoreResponsiveApp.Model.AppUser")
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade);
                });
#pragma warning restore 612, 618
        }
    }
}
